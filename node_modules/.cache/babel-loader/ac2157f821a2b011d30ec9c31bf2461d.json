{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yapink\\\\Desktop\\\\code\\\\code\\\\airbnb_02\\\\src\\\\base-ui\\\\scroll-view\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport { ViewWrapper } from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollView = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  // 定义组件状态\n  const [showRight, setShowRight] = useState(false);\n  const [posIndex, setPosIndex] = useState(0);\n  const totalDistanceRef = useRef(); // 组件渲染完毕，判断是否显示右侧按钮\n\n  const scrollContentRef = useRef();\n  useEffect(() => {\n    const scrollWidth = scrollContentRef.current.scrollWidth; // 可以滚动的宽度\n\n    const clientWidth = scrollContentRef.current.clientWidth; // 本身占据的宽度\n\n    const totalDistance = scrollWidth - clientWidth;\n    totalDistanceRef.current = totalDistance;\n    setShowRight(totalDistanceRef > 0);\n  }, [props.children]);\n\n  function rightClickHandle() {\n    const newIndex = posIndex + 1;\n    const newEl = scrollContentRef.current.children[newIndex];\n    const newOffsetLeft = newEl.offsetLeft; // console.log(newEl.offsetLeft)\n\n    scrollContentRef.current.style.transform = `translate(-${newOffsetLeft}px)`;\n    setPosIndex(newIndex); // 是否继续显示右边按钮\n\n    setShowRight(totalDistanceRef.current > newOffsetLeft);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ViewWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\u5DE6\\u8FB9\\u6309\\u94AE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), showRight && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rightClickHandle,\n      children: \"\\u53F3\\u8FB9\\u6309\\u94AE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll-content\",\n      ref: scrollContentRef,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}, \"y7XbpcJgpOj7BHgNbiciDYajnUM=\")), \"y7XbpcJgpOj7BHgNbiciDYajnUM=\");\n\n_c2 = ScrollView;\nScrollView.propTypes = {};\nexport default ScrollView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ScrollView$memo\");\n$RefreshReg$(_c2, \"ScrollView\");","map":{"version":3,"names":["PropTypes","React","memo","useEffect","useRef","useState","ViewWrapper","ScrollView","props","showRight","setShowRight","posIndex","setPosIndex","totalDistanceRef","scrollContentRef","scrollWidth","current","clientWidth","totalDistance","children","rightClickHandle","newIndex","newEl","newOffsetLeft","offsetLeft","style","transform","propTypes"],"sources":["C:/Users/Yapink/Desktop/code/code/airbnb_02/src/base-ui/scroll-view/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types'\r\nimport React, { memo, useEffect, useRef, useState } from 'react'\r\nimport { ViewWrapper } from './style'\r\n\r\nconst ScrollView = memo((props) => {\r\n  // 定义组件状态\r\n  const [ showRight, setShowRight ] = useState(false)\r\n  const [posIndex, setPosIndex] = useState(0)\r\n  const totalDistanceRef = useRef()\r\n\r\n  // 组件渲染完毕，判断是否显示右侧按钮\r\n  const scrollContentRef = useRef()\r\n  useEffect(() => {\r\n    const scrollWidth = scrollContentRef.current.scrollWidth // 可以滚动的宽度\r\n    const clientWidth = scrollContentRef.current.clientWidth // 本身占据的宽度\r\n    const totalDistance = scrollWidth - clientWidth\r\n    totalDistanceRef.current = totalDistance\r\n    setShowRight(totalDistanceRef > 0)\r\n  }, [props.children])\r\n\r\n  function rightClickHandle() {\r\n    const newIndex = posIndex + 1\r\n    const newEl = scrollContentRef.current.children[newIndex]\r\n    const newOffsetLeft = newEl.offsetLeft\r\n    // console.log(newEl.offsetLeft)\r\n    scrollContentRef.current.style.transform = `translate(-${newOffsetLeft}px)`\r\n    setPosIndex(newIndex)\r\n    // 是否继续显示右边按钮\r\n    setShowRight(totalDistanceRef.current > newOffsetLeft)\r\n  }\r\n\r\n  return (\r\n    <ViewWrapper>\r\n      <button>左边按钮</button>\r\n      { showRight && <button onClick={rightClickHandle}>右边按钮</button> }\r\n\r\n      <div className='scroll-content' ref={scrollContentRef}>\r\n        {props.children}\r\n      </div>\r\n    </ViewWrapper>\r\n  )\r\n})\r\n\r\nScrollView.propTypes = {}\r\n\r\nexport default ScrollView"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,SAASC,WAAT,QAA4B,SAA5B;;;AAEA,MAAMC,UAAU,iCAAGL,IAAI,SAAEM,KAAD,IAAW;EAAA;;EACjC;EACA,MAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;EACA,MAAMQ,gBAAgB,GAAGT,MAAM,EAA/B,CAJiC,CAMjC;;EACA,MAAMU,gBAAgB,GAAGV,MAAM,EAA/B;EACAD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAGD,gBAAgB,CAACE,OAAjB,CAAyBD,WAA7C,CADc,CAC2C;;IACzD,MAAME,WAAW,GAAGH,gBAAgB,CAACE,OAAjB,CAAyBC,WAA7C,CAFc,CAE2C;;IACzD,MAAMC,aAAa,GAAGH,WAAW,GAAGE,WAApC;IACAJ,gBAAgB,CAACG,OAAjB,GAA2BE,aAA3B;IACAR,YAAY,CAACG,gBAAgB,GAAG,CAApB,CAAZ;EACD,CANQ,EAMN,CAACL,KAAK,CAACW,QAAP,CANM,CAAT;;EAQA,SAASC,gBAAT,GAA4B;IAC1B,MAAMC,QAAQ,GAAGV,QAAQ,GAAG,CAA5B;IACA,MAAMW,KAAK,GAAGR,gBAAgB,CAACE,OAAjB,CAAyBG,QAAzB,CAAkCE,QAAlC,CAAd;IACA,MAAME,aAAa,GAAGD,KAAK,CAACE,UAA5B,CAH0B,CAI1B;;IACAV,gBAAgB,CAACE,OAAjB,CAAyBS,KAAzB,CAA+BC,SAA/B,GAA4C,cAAaH,aAAc,KAAvE;IACAX,WAAW,CAACS,QAAD,CAAX,CAN0B,CAO1B;;IACAX,YAAY,CAACG,gBAAgB,CAACG,OAAjB,GAA2BO,aAA5B,CAAZ;EACD;;EAED,oBACE,QAAC,WAAD;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEId,SAAS,iBAAI;MAAQ,OAAO,EAAEW,gBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFjB,eAIE;MAAK,SAAS,EAAC,gBAAf;MAAgC,GAAG,EAAEN,gBAArC;MAAA,UACGN,KAAK,CAACW;IADT;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CArCsB,kCAAP,iCAAhB;;MAAMZ,U;AAuCNA,UAAU,CAACoB,SAAX,GAAuB,EAAvB;AAEA,eAAepB,UAAf"},"metadata":{},"sourceType":"module"}